import { dew as _utilsDewDew } from "../generated/utils.dew.js";
import { dew as _HTMLElementDewDew } from "../generated/HTMLElement.dew.js";
import { dew as _HTMLElementImplDewDew } from "./HTMLElement-impl.dew.js";
import { dew as _nodeDewDew } from "../helpers/node.dew.js";
import { dew as _shadowDomDewDew } from "../helpers/shadow-dom.dew.js";
var exports = {},
    _dewExec = false;
export function dew() {
  if (_dewExec) return exports;
  _dewExec = true;

  const idlUtils = _utilsDewDew();

  const HTMLElement = _HTMLElementDewDew();

  const HTMLElementImpl = _HTMLElementImplDewDew().implementation;

  const {
    nodeRoot
  } = _nodeDewDew();

  const {
    assignSlotableForTree,
    findFlattenedSlotables
  } = _shadowDomDewDew();

  class HTMLSlotElementImpl extends HTMLElementImpl {
    constructor(globalObject, args, privateData) {
      super(globalObject, args, privateData);
      this._assignedNodes = [];
    } // https://dom.spec.whatwg.org/#slot-name


    get name() {
      return this.getAttributeNS(null, "name") || "";
    }

    _attrModified(name, value, oldValue) {
      super._attrModified(name, value, oldValue); // https://dom.spec.whatwg.org/#slot-name


      if (name === "name") {
        if (value === oldValue) {
          return;
        }

        if (value === null && oldValue === "") {
          return;
        }

        if (value === "" && oldValue === null) {
          return;
        }

        assignSlotableForTree(nodeRoot(this));
      }
    } // https://html.spec.whatwg.org/#dom-slot-assignednodes


    assignedNodes(options) {
      if (!options || !options.flatten) {
        return this._assignedNodes.map(idlUtils.wrapperForImpl);
      }

      return findFlattenedSlotables(this).map(idlUtils.wrapperForImpl);
    } // https://html.spec.whatwg.org/#dom-slot-assignedelements


    assignedElements(options) {
      return this.assignedNodes(options).filter(HTMLElement.is);
    }

  }

  exports = {
    implementation: HTMLSlotElementImpl
  };
  return exports;
}