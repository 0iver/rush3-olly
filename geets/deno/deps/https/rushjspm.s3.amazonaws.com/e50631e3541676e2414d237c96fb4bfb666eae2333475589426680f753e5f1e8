import { dew as _webidl2jsWrapperDewDew } from "/npm:domexception@2/webidl2js-wrapper_dew.js";
import { dew as _npmWebidlConversions6DewDew } from "/npm:webidl-conversions@6_dew.js";
var exports = {},
    _dewExec = false;
export function dew() {
  if (_dewExec) return exports;
  _dewExec = true;

  const DOMException = _webidl2jsWrapperDewDew();

  const conversions = _npmWebidlConversions6DewDew();

  exports.FILTER_ACCEPT = 1; // NodeFilter.FILTER_ACCEPT

  exports.FILTER_REJECT = 2; // NodeFilter.FILTER_REJECT

  exports.FILTER_SKIP = 3; // NodeFilter.FILTER_SKIP

  exports.filter = (nodeIteratorOrTreeWalkerImpl, nodeImpl) => {
    if (nodeIteratorOrTreeWalkerImpl._active) {
      throw DOMException.create(nodeIteratorOrTreeWalkerImpl._globalObject, ["Recursive node filtering", "InvalidStateError"]);
    }

    const n = nodeImpl.nodeType - 1;

    if (!(1 << n & nodeIteratorOrTreeWalkerImpl.whatToShow)) {
      return exports.FILTER_SKIP;
    } // Saving in a variable is important so we don't accidentally call it as a method later.


    const {
      filter
    } = nodeIteratorOrTreeWalkerImpl;

    if (filter === null) {
      return exports.FILTER_ACCEPT;
    }

    nodeIteratorOrTreeWalkerImpl._active = true;
    let result; // https://github.com/whatwg/dom/issues/494

    try {
      result = filter(nodeImpl);
    } finally {
      nodeIteratorOrTreeWalkerImpl._active = false;
    }

    result = conversions["unsigned short"](result);
    return result;
  };

  return exports;
}