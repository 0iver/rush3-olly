import { dew as _utils2Dew } from "/npm:@jimp/utils@0.16?dew";
var exports = {},
    _dewExec = false;
export function dew() {
  if (_dewExec) return exports;
  _dewExec = true;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _utils = _utils2Dew();
  /**
   * Inverts the image
   * @param {function(Error, Jimp)} cb (optional) a callback for when complete
   * @returns {Jimp} this for chaining of methods
   */


  var _default = function _default() {
    return {
      invert: function invert(cb) {
        this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function (x, y, idx) {
          this.bitmap.data[idx] = 255 - this.bitmap.data[idx];
          this.bitmap.data[idx + 1] = 255 - this.bitmap.data[idx + 1];
          this.bitmap.data[idx + 2] = 255 - this.bitmap.data[idx + 2];
        });

        if ((0, _utils.isNodePattern)(cb)) {
          cb.call(this, null, this);
        }

        return this;
      }
    };
  };

  exports["default"] = _default;
  exports = exports.default;
  return exports;
}