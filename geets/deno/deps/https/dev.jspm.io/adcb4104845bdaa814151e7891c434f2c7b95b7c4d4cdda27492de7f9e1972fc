import { dew as _interopRequireDefaultDewDew } from "/npm:@babel/runtime@7/helpers/interopRequireDefault?dew";
import { dew as _definePropertyDewDew } from "/npm:@babel/runtime@7/helpers/defineProperty?dew";
import { dew as _npmJpegJsDew } from "/npm:jpeg-js@0.4.2?dew";
import { dew as _utils2Dew } from "/npm:@jimp/utils@0.16?dew";
var exports = {},
    _dewExec = false;
export function dew() {
  if (_dewExec) return exports;
  _dewExec = true;

  var _interopRequireDefault = _interopRequireDefaultDewDew();

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _defineProperty2 = _interopRequireDefault(_definePropertyDewDew());

  var _jpegJs = _interopRequireDefault(_npmJpegJsDew());

  var _utils = _utils2Dew();

  var MIME_TYPE = 'image/jpeg';

  var _default = function _default() {
    return {
      mime: (0, _defineProperty2["default"])({}, MIME_TYPE, ['jpeg', 'jpg', 'jpe']),
      constants: {
        MIME_JPEG: MIME_TYPE
      },
      decoders: (0, _defineProperty2["default"])({}, MIME_TYPE, _jpegJs["default"].decode),
      encoders: (0, _defineProperty2["default"])({}, MIME_TYPE, function (image) {
        return _jpegJs["default"].encode(image.bitmap, image._quality).data;
      }),
      "class": {
        // The quality to be used when saving JPEG images
        _quality: 100,

        /**
         * Sets the quality of the image when saving as JPEG format (default is 100)
         * @param {number} n The quality to use 0-100
         * @param {function(Error, Jimp)} cb (optional) a callback for when complete
         * @returns {Jimp} this for chaining of methods
         */
        quality: function quality(n, cb) {
          if (typeof n !== 'number') {
            return _utils.throwError.call(this, 'n must be a number', cb);
          }

          if (n < 0 || n > 100) {
            return _utils.throwError.call(this, 'n must be a number 0 - 100', cb);
          }

          this._quality = Math.round(n);

          if ((0, _utils.isNodePattern)(cb)) {
            cb.call(this, null, this);
          }

          return this;
        }
      }
    };
  };

  exports["default"] = _default;
  exports = exports.default;
  return exports;
}