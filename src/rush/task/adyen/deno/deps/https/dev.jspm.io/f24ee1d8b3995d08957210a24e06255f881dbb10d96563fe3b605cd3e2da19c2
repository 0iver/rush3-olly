import { dew as _utilsDewDew } from "../../utils.dew.js";
import { dew as _DOMTokenListDewDew } from "../generated/DOMTokenList.dew.js";
import { dew as _HTMLElementImplDewDew } from "./HTMLElement-impl.dew.js";
import { dew as _HTMLHyperlinkElementUtilsImplDewDew } from "./HTMLHyperlinkElementUtils-impl.dew.js";
var exports = {},
    _dewExec = false;
export function dew() {
  if (_dewExec) return exports;
  _dewExec = true;

  const {
    mixin
  } = _utilsDewDew();

  const DOMTokenList = _DOMTokenListDewDew();

  const HTMLElementImpl = _HTMLElementImplDewDew().implementation;

  const HTMLHyperlinkElementUtilsImpl = _HTMLHyperlinkElementUtilsImplDewDew().implementation;

  class HTMLAnchorElementImpl extends HTMLElementImpl {
    constructor(globalObject, args, privateData) {
      super(globalObject, args, privateData);

      this._htmlHyperlinkElementUtilsSetup();

      this._hasActivationBehavior = true;
    }

    _activationBehavior() {
      this._followAHyperlink();
    }

    get relList() {
      if (this._relList === undefined) {
        this._relList = DOMTokenList.createImpl(this._globalObject, [], {
          element: this,
          attributeLocalName: "rel"
        });
      }

      return this._relList;
    }

    get text() {
      return this.textContent;
    }

    set text(v) {
      this.textContent = v;
    }

    _attrModified(name, value, oldValue) {
      super._attrModified(name, value, oldValue);

      if (name === "rel" && this._relList !== undefined) {
        this._relList.attrModified();
      }
    }

  }

  mixin(HTMLAnchorElementImpl.prototype, HTMLHyperlinkElementUtilsImpl.prototype);
  exports = {
    implementation: HTMLAnchorElementImpl
  };
  return exports;
}