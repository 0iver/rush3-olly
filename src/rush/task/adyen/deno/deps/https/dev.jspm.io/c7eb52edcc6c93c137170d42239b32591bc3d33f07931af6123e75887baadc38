import { dew as _utilsDewDew } from "../../utils.dew.js";
import { dew as _NavigatorIDImplDewDew } from "./NavigatorID-impl.dew.js";
import { dew as _NavigatorLanguageImplDewDew } from "./NavigatorLanguage-impl.dew.js";
import { dew as _NavigatorOnLineImplDewDew } from "./NavigatorOnLine-impl.dew.js";
import { dew as _NavigatorCookiesImplDewDew } from "./NavigatorCookies-impl.dew.js";
import { dew as _NavigatorPluginsImplDewDew } from "./NavigatorPlugins-impl.dew.js";
import { dew as _NavigatorConcurrentHardwareImplDewDew } from "./NavigatorConcurrentHardware-impl.dew.js";
var exports = {},
    _dewExec = false;
export function dew() {
  if (_dewExec) return exports;
  _dewExec = true;

  const {
    mixin
  } = _utilsDewDew();

  const NavigatorIDImpl = _NavigatorIDImplDewDew().implementation;

  const NavigatorLanguageImpl = _NavigatorLanguageImplDewDew().implementation;

  const NavigatorOnLineImpl = _NavigatorOnLineImplDewDew().implementation;

  const NavigatorCookiesImpl = _NavigatorCookiesImplDewDew().implementation;

  const NavigatorPluginsImpl = _NavigatorPluginsImplDewDew().implementation;

  const NavigatorConcurrentHardwareImpl = _NavigatorConcurrentHardwareImplDewDew().implementation;

  class NavigatorImpl {
    constructor(globalObject, args, privateData) {
      this._globalObject = globalObject;
      this.userAgent = privateData.userAgent;
      this.languages = Object.freeze(["en-US", "en"]);
    }

  }

  mixin(NavigatorImpl.prototype, NavigatorIDImpl.prototype);
  mixin(NavigatorImpl.prototype, NavigatorLanguageImpl.prototype);
  mixin(NavigatorImpl.prototype, NavigatorOnLineImpl.prototype);
  mixin(NavigatorImpl.prototype, NavigatorCookiesImpl.prototype);
  mixin(NavigatorImpl.prototype, NavigatorPluginsImpl.prototype);
  mixin(NavigatorImpl.prototype, NavigatorConcurrentHardwareImpl.prototype);
  exports.implementation = NavigatorImpl;
  return exports;
}