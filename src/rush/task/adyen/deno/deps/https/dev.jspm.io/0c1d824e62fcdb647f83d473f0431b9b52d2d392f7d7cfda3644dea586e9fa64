import { dew as _StyleSheetDewDew } from "./StyleSheet.dew.js";
import { dew as _CSSStyleRuleDewDew } from "./CSSStyleRule.dew.js";
import { dew as _parseDewDew } from "./parse.dew.js";
var exports = {},
    _dewExec = false;

var _global = typeof self !== "undefined" ? self : global;

export function dew() {
  if (_dewExec) return exports;
  _dewExec = true;
  //.CommonJS
  var CSSOM = {
    StyleSheet: _StyleSheetDewDew().StyleSheet,
    CSSStyleRule: _CSSStyleRuleDewDew().CSSStyleRule
  }; ///CommonJS

  /**
   * @constructor
   * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet
   */

  CSSOM.CSSStyleSheet = function CSSStyleSheet() {
    CSSOM.StyleSheet.call(this || _global);
    (this || _global).cssRules = [];
  };

  CSSOM.CSSStyleSheet.prototype = new CSSOM.StyleSheet();
  CSSOM.CSSStyleSheet.prototype.constructor = CSSOM.CSSStyleSheet;
  /**
   * Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade.
   *
   *   sheet = new Sheet("body {margin: 0}")
   *   sheet.toString()
   *   -> "body{margin:0;}"
   *   sheet.insertRule("img {border: none}", 0)
   *   -> 0
   *   sheet.toString()
   *   -> "img{border:none;}body{margin:0;}"
   *
   * @param {string} rule
   * @param {number} index
   * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-insertRule
   * @return {number} The index within the style sheet's rule collection of the newly inserted rule.
   */

  CSSOM.CSSStyleSheet.prototype.insertRule = function (rule, index) {
    if (index < 0 || index > (this || _global).cssRules.length) {
      throw new RangeError("INDEX_SIZE_ERR");
    }

    var cssRule = CSSOM.parse(rule).cssRules[0];
    cssRule.parentStyleSheet = this || _global;

    (this || _global).cssRules.splice(index, 0, cssRule);

    return index;
  };
  /**
   * Used to delete a rule from the style sheet.
   *
   *   sheet = new Sheet("img{border:none} body{margin:0}")
   *   sheet.toString()
   *   -> "img{border:none;}body{margin:0;}"
   *   sheet.deleteRule(0)
   *   sheet.toString()
   *   -> "body{margin:0;}"
   *
   * @param {number} index within the style sheet's rule list of the rule to remove.
   * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-deleteRule
   */


  CSSOM.CSSStyleSheet.prototype.deleteRule = function (index) {
    if (index < 0 || index >= (this || _global).cssRules.length) {
      throw new RangeError("INDEX_SIZE_ERR");
    }

    (this || _global).cssRules.splice(index, 1);
  };
  /**
   * NON-STANDARD
   * @return {string} serialize stylesheet
   */


  CSSOM.CSSStyleSheet.prototype.toString = function () {
    var result = "";
    var rules = (this || _global).cssRules;

    for (var i = 0; i < rules.length; i++) {
      result += rules[i].cssText + "\n";
    }

    return result;
  }; //.CommonJS


  exports.CSSStyleSheet = CSSOM.CSSStyleSheet;
  CSSOM.parse = _parseDewDew().parse; // Cannot be included sooner due to the mutual dependency between parse.js and CSSStyleSheet.js
  ///CommonJS

  return exports;
}