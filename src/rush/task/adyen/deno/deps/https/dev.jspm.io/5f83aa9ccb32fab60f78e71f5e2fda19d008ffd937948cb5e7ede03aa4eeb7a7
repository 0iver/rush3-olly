import { dew as _eventsDewDew } from "../helpers/events.dew.js";
import { dew as _HTMLElementImplDewDew } from "./HTMLElement-impl.dew.js";
var exports = {},
    _dewExec = false;
export function dew() {
  if (_dewExec) return exports;
  _dewExec = true;

  const {
    fireAnEvent
  } = _eventsDewDew();

  const HTMLElementImpl = _HTMLElementImplDewDew().implementation;

  class HTMLDetailsElementImpl extends HTMLElementImpl {
    constructor(globalObject, args, privateData) {
      super(globalObject, args, privateData);
      this._taskQueue = null;
    }

    _dispatchToggleEvent() {
      this._taskQueue = null;
      fireAnEvent("toggle", this);
    }

    _attrModified(name, value, oldValue) {
      super._attrModified(name, value, oldValue);

      if (name === "open" && this._taskQueue === null) {
        // Check that the attribute is added or removed, not merely changed
        if (value !== oldValue && value !== null && oldValue === null || value === null && oldValue !== null) {
          this._taskQueue = setTimeout(this._dispatchToggleEvent.bind(this), 0);
        }
      }
    }

  }

  exports = {
    implementation: HTMLDetailsElementImpl
  };
  return exports;
}